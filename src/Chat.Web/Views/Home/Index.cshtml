@using Chat.Domain.Entities;
@model List<ChatRoom>

@{
    ViewData["Title"] = "Home Page";
}
<!DOCTYPE html>
<html>
<head>
    <meta>
</head>
<body>
    <div class="container">
        <div class="leftSide">

            <div class="header">
                <div class="userImg">
                    <img src="/css/account.jpg" class="cover">
                </div>
                <div>Bobur</div>
            </div>

            <div class="seachChat">
                <div>
                    <input type="text" placeholder="Search chat" />
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                        <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
                    </svg>
                </div>
            </div>

            <div class="chatList">
                @foreach (var a in Model)
                {
                    <button class="block active gap-2" id="myButton">
                        <div class="imgBx">
                            <img src="/css/account.jpg" class="cover" />
                        </div>
                        <div class="details">
                            <div class="listHead mt-1">
                                <h5 class="m-0">
                                    @if (a.FirstUser is null)
                                    {
                                        @a.SecondUser.UserName
                                    }
                                    else
                                    {
                                        @a.FirstUser.UserName
                                    }
                                </h5>
                                <p class="time m-0">10:10</p>
                            </div>
                            <div class="message_p">
                                <p class="mb-1">How to make Whatsapp clone using html and css</p>
                                <b>1</b>
                            </div>
                        </div>
                    </button>
                }
            </div>
        </div>
        <div class="rightSide" id="rightSide" style="display:none">
            <div class="header">
                <div class="imgText">
                    <div class="userImg">
                        <img src="/css/account.jpg" class="cover">
                    </div>
                    <h6>Bobur<br /><span>online</span></h6>
                    <ul class="navIcons">
                        <li>B</li>
                        <li>B</li>
                    </ul>
                </div>
            </div>

            <div class="chatBox" id="chatBox">
                @for (var i = 0; i < 50; i++)
                {
                    <div class="message myMessage">
                        <p>Hi, how are you doing really good right<br /><span>10:15</span></p>
                    </div>
                    <div class="message friendMessage">
                        <p>Hi asdasgdausygdaysgduasgduasygdasgdasydadgs<br /><span>10:15</span></p>
                    </div>
                }
            </div>

            <div class="chatInput">
                <button id="sendButton" class="btn btn-success"></button>
            </div>
        </div>
    </div>
</body>
</html>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<script src="~/js/mychat.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
@section Scripts {
    <script>
        $(document).ready(function () {
            $("#submitButton").click(function () {
                const button = document.getElementById("myButton");
                const div = document.getElementById("rightSide");

                button.addEventListener("click", function () {
                    if (div.style.display === "none") {
                        div.style.display = "block"; // Or any other visible display value like 'inline'
                    }
                });
                // const data = {
                //     name: $("#nameInput").val(),
                //     age: parseInt($("#ageInput").val())
                // };

                // $.ajax({
                //     url: "/Home/ProcessData",
                //     type: "POST",
                //     contentType: "application/json",
                //     data: JSON.stringify(data),
                //     success: function (response) {
                //         console.log("Success:", response);
                //         // Update UI or handle success message
                //     },
                //     error: function (jqXHR, textStatus, errorThrown) {
                //         console.error("Error:", textStatus, errorThrown);
                //         // Handle errors
                //     }
                // });
            });
        });
    </script>
}

